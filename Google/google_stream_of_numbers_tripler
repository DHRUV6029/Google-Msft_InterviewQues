# Find triplets from this incoming stream such that difference between the elements in pair is at most targ
# targ=7
# stream=22,3,1,8,10,6,13,.......
# op=[(3, 1, 8), (3, 1, 6), (3, 8, 10), (3, 8, 6), (3, 10, 6), (1, 8, 6), (8, 10, 6), (8, 10, 13), (8, 6, 13), (10, 6, 13)]

# Since the approach is extremely costly, the interviewer was unhappy with the approach so I couldn't move to the next round. Someone please help me with the optimal approach to this question
from collections import Counter
stream=[22,3,1,8,10,6,13]
one,two=Counter(),Counter()
res=set()
for i in stream:     
    for j in range(i-7,i+8):
        for k in range(j,min(i,j)+8):
            res|={(j,k,i)*two[j,k], (k,j,i)*two[k,j]}              
        two[j,i]|=one[j]       
    one[i]=1
    
print(res-{tuple()})